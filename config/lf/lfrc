# https://github.com/gokcehan/lf/blob/master/doc.md

###########
# OPTIONS #
###########

set previewer ~/.config/lf/lf_previewer.sh
set icons true
set drawbox true
set hidden true
# set ignorecase true

############
# COMMANDS #
############

# DEFAULTS
# quit q
# up k, <up>
# half-up <c-u>
# page-up <c-b>, <pgup>
# scroll-up <c-y>
# down j, <down>
# half-down <c-d>
# page-down <c-f>, <pgdn>
# scroll-down <c-e>
# updir h, <left>
# open l, <right>
# jump-next ]
# jump-prev [
# top gg, <home>
# bottom G, <end>
# high H
# middle M
# low L
# toggle
# invert v
# invert-below
# unselect u
# glob-select
# glob-unselect
# calcdirsize
# clearmaps
# copy y
# cut d
# paste p
# clear c
# sync
# draw
# redraw <c-l>
# load
# reload <c-r>
# echo
# echomsg
# echoerr
# cd
# select
# delete
# rename r
# source
# push
# read :
# shell $
# shell-pipe %
# shell-wait !
# shell-async &
# find f
# find-back F
# find-next ;
# find-prev ,
# search /
# search-back ?
# search-next n
# search-prev N
# filter
# setfilter
# mark-save m
# mark-load '
# mark-remove "
# tag
# tag-toggle t
# tty-write

# cmd delete ${{
#     echo 'delete?[y/n]'
#     read ans
#     [ $ans = 'y' ] && echo 'deleting files..' && echo $f || echo 'cancelled.'
# }}

cmd on-select &{{
  lf -remote "send $id set statfmt \"$(eza -ld --color=always "$f")\""
}}

cmd open ${{
  case $(file --mime-type -Lb $f) in
#     text/*) nvim $fx;;
#     *) for f in $fx; do xdg-open $f > /dev/null 2> /dev/null & done;;
      text/*) lf -remote "send $id \$$EDITOR \$fx";;
      *) for f in $fx; do $OPENER "$f" > /dev/null 2> /dev/null & done;;
  esac
}}

# cmd editor-open $$EDITOR $f

# cmd mkdir ${{
#   printf "Directory Name: "
#   read DIR
#   mkdir $DIR
# }}

cmd dragon-out $xdragon -a -x "$fx"

cmd fzf ${{
  res="$(find . | fzf --reverse --header='Jump to location')"
  if [ -n "$res" ]; then
      if [ -d "$res" ]; then
          cmd="cd"
      else
          cmd="select"
      fi
      res="$(printf '%s' "$res" | sed 's/\\/\\\\/g;s/"/\\"/g')"
      lf -remote "send $id $cmd \"$res\""
  fi
}}

cmd unzip ${{
  set -f
  case $f in
      *.tar.bz|*.tar.bz2|*.tbz|*.tbz2) tar xjvf $f;;
      *.tar.gz|*.tgz) tar xzvf $f;;
      *.tar.xz|*.txz) tar xJvf $f;;
      *.zip) unzip $f;;
      *.rar) unzip x $f;;
      *.7z) 7z x $f;;
  esac
}}

cmd zip ${{
  set -f
  mkdir $1
  cp -r $fx $1
  zip -r $1.zip $1
  rm -rf $1
}}

cmd pager $bat --paging=always "$f"

cmd q quit

# cmd trash ${{
#   set -f
#   gio trash "$fx"
# }}

###############
# KEYBINDINGS #
###############

# map do dragon-out
# map d
map V pager
map f fzf
map <enter> open
map . set hidden!
map a push %mkdir<space>
map t push %touch<space>
map r push :rename<space>
# map x trash
# map <delete> trash
# map \" ""
# map o ""
# map c mkdir
# map ` mark-load
# map \' mark-load
# map <enter> open
# map g~ cd
# map gh cd
# map g/ /
# map ee editor-open

# defaults
# cmd open &$OPENER "$f"
# map e $$EDITOR "$f"
# map i $$PAGER "$f"
# map w $$SHELL
# cmd doc $$lf -doc | $PAGER
# map <f-1> doc
# cmd maps $lf -remote "query $id maps" | $PAGER
# cmd cmaps $lf -remote "query $id cmaps" | $PAGER
# cmd cmds $lf -remote "query $id cmds" | $PAGER

